{"ast":null,"code":"import _defineProperty from\"/home/aditya/Desktop/meme-world/Meme-World/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/aditya/Desktop/meme-world/Meme-World/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/aditya/Desktop/meme-world/Meme-World/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/aditya/Desktop/meme-world/Meme-World/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/aditya/Desktop/meme-world/Meme-World/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./main.css';var MemeGenerator=/*#__PURE__*/function(_React$Component){_inherits(MemeGenerator,_React$Component);var _super=_createSuper(MemeGenerator);function MemeGenerator(){var _this;_classCallCheck(this,MemeGenerator);_this=_super.call(this);_this.handleChange=function(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;_this.setState(_defineProperty({},name,value));};_this.handleSubmit=function(event){event.preventDefault();var randNum=Math.floor(Math.random()*_this.state.allMemeImgs.length);var randMemeImg=_this.state.allMemeImgs[randNum].url;_this.setState({randomImg:randMemeImg});};_this.state={topText:\"\",bottomText:\"\",randomImg:\"http://i.imgflip.com/1bij.jpg\",allMemeImgs:[]};return _this;}_createClass(MemeGenerator,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"https://api.imgflip.com/get_memes\").then(function(response){return response.json();}).then(function(response){var memes=response.data.memes;_this2.setState({allMemeImgs:memes});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"form\",{className:\"meme-form\",onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"topText\",placeholder:\"Top Text\",value:this.state.topText,onChange:this.handleChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"bottomText\",placeholder:\"Bottom Text\",value:this.state.bottomText,onChange:this.handleChange}),/*#__PURE__*/React.createElement(\"button\",null,\"Generate\")),/*#__PURE__*/React.createElement(\"div\",{className:\"meme\"},/*#__PURE__*/React.createElement(\"img\",{alt:\"memeImage\",src:this.state.randomImg}),/*#__PURE__*/React.createElement(\"h2\",{className:\"top\"},this.state.topText),/*#__PURE__*/React.createElement(\"h2\",{className:\"bottom\"},this.state.bottomText)));}}]);return MemeGenerator;}(React.Component);export default MemeGenerator;","map":{"version":3,"sources":["/home/aditya/Desktop/meme-world/Meme-World/src/Components/MainArea.component.jsx"],"names":["React","MemeGenerator","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","randNum","Math","floor","random","state","allMemeImgs","length","randMemeImg","url","randomImg","topText","bottomText","fetch","then","response","json","memes","data","textAlign","Component"],"mappings":"mmBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,YAAP,C,GAEMC,CAAAA,a,0HACL,wBAAc,+CACb,wBADa,MAoBXC,YApBW,CAoBI,SAACC,KAAD,CAAW,mBACAA,KAAK,CAACC,MADN,CACfC,IADe,eACfA,IADe,CACTC,KADS,eACTA,KADS,CAEtB,MAAKC,QAAL,oBACKF,IADL,CACYC,KADZ,GAGH,CAzBU,OA2BXE,YA3BW,CA2BI,SAACL,KAAD,CAAW,CACtBA,KAAK,CAACM,cAAN,GACA,GAAMC,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,MAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAAlD,CAAhB,CACA,GAAMC,CAAAA,WAAW,CAAG,MAAKH,KAAL,CAAWC,WAAX,CAAuBL,OAAvB,EAAgCQ,GAApD,CACA,MAAKX,QAAL,CAAc,CAAEY,SAAS,CAAEF,WAAb,CAAd,EACH,CAhCU,CAGb,MAAKH,KAAL,CAAa,CACZM,OAAO,CAAE,EADG,CAEHC,UAAU,CAAE,EAFT,CAGHF,SAAS,CAAE,+BAHR,CAIHJ,WAAW,CAAE,EAJV,CAAb,CAHa,aASb,C,uFAEmB,iBACbO,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAC,QAAQ,CAAI,IACPE,CAAAA,KADO,CACEF,QAAQ,CAACG,IADX,CACPD,KADO,CAEd,MAAI,CAACnB,QAAL,CAAc,CAAEQ,WAAW,CAAEW,KAAf,CAAd,EACH,CALD,EAMH,C,uCAgBK,CACR,mBACC,2BAAK,KAAK,CAAI,CAACE,SAAS,CAAE,QAAZ,CAAd,eACa,4BAAM,SAAS,CAAG,WAAlB,CAA8B,QAAQ,CAAI,KAAKpB,YAA/C,eACI,6BACI,IAAI,CAAG,MADX,CAEI,IAAI,CAAG,SAFX,CAGI,WAAW,CAAG,UAHlB,CAII,KAAK,CAAI,KAAKM,KAAL,CAAWM,OAJxB,CAKI,QAAQ,CAAI,KAAKlB,YALrB,EADJ,cASI,6BACI,IAAI,CAAG,MADX,CAEI,IAAI,CAAG,YAFX,CAGI,WAAW,CAAG,aAHlB,CAII,KAAK,CAAI,KAAKY,KAAL,CAAWO,UAJxB,CAKI,QAAQ,CAAI,KAAKnB,YALrB,EATJ,cAgBI,6CAhBJ,CADb,cAmBa,2BAAK,SAAS,CAAG,MAAjB,eACI,2BAAK,GAAG,CAAG,WAAX,CAAuB,GAAG,CAAI,KAAKY,KAAL,CAAWK,SAAzC,EADJ,cAEI,0BAAI,SAAS,CAAG,KAAhB,EAAuB,KAAKL,KAAL,CAAWM,OAAlC,CAFJ,cAGI,0BAAI,SAAS,CAAG,QAAhB,EAA0B,KAAKN,KAAL,CAAWO,UAArC,CAHJ,CAnBb,CADD,CA2BA,C,2BA/D0BrB,KAAK,CAAC6B,S,EAkElC,cAAe5B,CAAAA,aAAf","sourcesContent":["import React from 'react'\nimport './main.css'\n\nclass MemeGenerator extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\ttopText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: [],\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(response => {\n            const {memes} = response.data\n            this.setState({ allMemeImgs: memes })\n        })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg = this.state.allMemeImgs[randNum].url\n        this.setState({ randomImg: randMemeImg })\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div style = {{textAlign: \"center\"}}>\n                <form className = \"meme-form\" onSubmit = {this.handleSubmit}>\n                    <input \n                        type = \"text\"\n                        name = \"topText\"\n                        placeholder = \"Top Text\"\n                        value = {this.state.topText}\n                        onChange = {this.handleChange}\n\n                    />\n                    <input \n                        type = \"text\"\n                        name = \"bottomText\"\n                        placeholder = \"Bottom Text\"\n                        value = {this.state.bottomText}\n                        onChange = {this.handleChange}\n                    />\n                    <button>Generate</button>\n                </form>\n                <div className = \"meme\">\n                    <img alt = \"memeImage\" src = {this.state.randomImg} />\n                    <h2 className = \"top\">{this.state.topText}</h2>\n                    <h2 className = \"bottom\">{this.state.bottomText}</h2>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MemeGenerator;\n\n"]},"metadata":{},"sourceType":"module"}