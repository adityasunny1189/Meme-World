{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/meme-world/Meme-World/src/Components/MainArea.component.jsx\";\nimport React from 'react';\nimport './main.css';\n\nclass MemeGenerator extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n      const randMemeImg = this.state.allMemeImgs[randNum].url;\n      this.setState({\n        randomImg: randMemeImg\n      });\n    };\n\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"memeImage\",\n      src: this.state.randomImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.state.topText), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/home/aditya/Desktop/meme-world/Meme-World/src/Components/MainArea.component.jsx"],"names":["React","MemeGenerator","Component","constructor","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","randNum","Math","floor","random","state","allMemeImgs","length","randMemeImg","url","randomImg","topText","bottomText","componentDidMount","fetch","then","response","json","memes","data","render","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './main.css'\n\nclass MemeGenerator extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\ttopText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: [],\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(response => {\n            const {memes} = response.data\n            this.setState({ allMemeImgs: memes })\n        })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg = this.state.allMemeImgs[randNum].url\n        this.setState({ randomImg: randMemeImg })\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div style = {{textAlign: \"center\"}}>\n                <form className = \"meme-form\" onSubmit = {this.handleSubmit}>\n                    <input \n                        type = \"text\"\n                        name = \"topText\"\n                        placeholder = \"Top Text\"\n                        value = {this.state.topText}\n                        onChange = {this.handleChange}\n\n                    />\n                    <input \n                        type = \"text\"\n                        name = \"bottomText\"\n                        placeholder = \"Bottom Text\"\n                        value = {this.state.bottomText}\n                        onChange = {this.handleChange}\n                    />\n                    <button>Generate</button>\n                </form>\n                <div className = \"meme\">\n                    <img alt = \"memeImage\" src = {this.state.randomImg} />\n                    <h2 className = \"top\">{this.state.topText}</h2>\n                    <h2 className = \"bottom\">{this.state.bottomText}</h2>\n                </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MemeGenerator;\n\n"]},"metadata":{},"sourceType":"module"}